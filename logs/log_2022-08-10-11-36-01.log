[2022-08-10 11:36:02,557]^;INFO^;226^;configuration.py^;get_training_pipeline_config()^;Training pipleine config: TrainingPipelineConfig(artifact_dir='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact')
[2022-08-10 11:36:02,558]^;INFO^;116^;pipeline.py^;run_pipeline()^;Pipeline starting.
[2022-08-10 11:36:02,558]^;INFO^;13^;demo.py^;main()^;main function execution completed.
[2022-08-10 11:36:02,558]^;INFO^;132^;pipeline.py^;run_pipeline()^;Pipeline experiment: Experiment(experiment_id='3a396384-73c5-40d5-b252-f4b4b71dd7b8', initialization_timestamp='2022-08-10-11-36-01', artifact_time_stamp='2022-08-10-11-36-01', running_status=True, start_time=datetime.datetime(2022, 8, 10, 11, 36, 2, 558596), stop_time=None, execution_time=None, message='Pipeline has been started.', experiment_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/experiment/experiment.csv', accuracy=None, is_model_accepted=None)
[2022-08-10 11:36:02,569]^;INFO^;65^;configuration.py^;get_data_ingestion_config()^;Data Ingestion config: DataIngestionConfig(dataset_download_url='https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz', tgz_download_dir='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/tgz_data', raw_data_dir='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/raw_data', ingested_train_dir='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/ingested_data/train', ingested_test_dir='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/ingested_data/test')
[2022-08-10 11:36:02,569]^;INFO^;16^;data_ingestion.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-08-10 11:36:02,570]^;INFO^;37^;data_ingestion.py^;download_housing_data()^;Downloading file from :[https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz] into :[/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/tgz_data/housing.tgz]
[2022-08-10 11:36:02,748]^;INFO^;39^;data_ingestion.py^;download_housing_data()^;File :[/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/tgz_data/housing.tgz] has been downloaded successfully.
[2022-08-10 11:36:02,748]^;INFO^;54^;data_ingestion.py^;extract_tgz_file()^;Extracting tgz file: [/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/tgz_data/housing.tgz] into dir: [/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/raw_data]
[2022-08-10 11:36:02,766]^;INFO^;57^;data_ingestion.py^;extract_tgz_file()^;Extraction completed
[2022-08-10 11:36:02,766]^;INFO^;71^;data_ingestion.py^;split_data_as_train_test()^;Reading csv file: [/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/raw_data/housing.csv]
[2022-08-10 11:36:02,783]^;INFO^;81^;data_ingestion.py^;split_data_as_train_test()^;Splitting data into train and test
[2022-08-10 11:36:02,790]^;INFO^;99^;data_ingestion.py^;split_data_as_train_test()^;Exporting training datset to file: [/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/ingested_data/train/housing.csv]
[2022-08-10 11:36:02,848]^;INFO^;104^;data_ingestion.py^;split_data_as_train_test()^;Exporting test dataset to file: [/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/ingested_data/test/housing.csv]
[2022-08-10 11:36:02,863]^;INFO^;113^;data_ingestion.py^;split_data_as_train_test()^;Data Ingestion artifact:[DataIngestionArtifact(train_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/ingested_data/train/housing.csv', test_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_ingestion/2022-08-10-11-36-01/ingested_data/test/housing.csv', is_ingested=True, message='Data ingestion completed successfully.')]
[2022-08-10 11:36:02,863]^;INFO^;130^;data_ingestion.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-08-10 11:36:02,863]^;INFO^;21^;data_validation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Valdaition log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-08-10 11:36:02,863]^;INFO^;39^;data_validation.py^;is_train_test_file_exists()^;Checking if training and test file is available
[2022-08-10 11:36:02,863]^;INFO^;51^;data_validation.py^;is_train_test_file_exists()^;Is train and test file exists?-> True
[2022-08-10 11:36:03,132]^;INFO^;140^;data_validation.py^;initiate_data_validation()^;Data validation artifact: DataValidationArtifact(schema_file_path='/home/yogesh/self-learning/project/machine_learning_project/config/schema.yaml', report_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_validation/2022-08-10-11-36-01/report.json', report_page_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_validation/2022-08-10-11-36-01/report.html', is_validated=True, message='Data Validation performed successully.')
[2022-08-10 11:36:03,132]^;INFO^;147^;data_validation.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Valdaition log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-08-10 11:36:03,132]^;INFO^;149^;configuration.py^;get_data_transformation_config()^;Data transformation config: DataTransformationConfig(add_bedroom_per_room=True, transformed_train_dir='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_transformation/2022-08-10-11-36-01/transformed_data/train', transformed_test_dir='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_transformation/2022-08-10-11-36-01/transformed_data/test', preprocessed_object_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_transformation/2022-08-10-11-36-01/preprocessed/preprocessed.pkl')
[2022-08-10 11:36:03,132]^;INFO^;97^;data_transformation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-08-10 11:36:03,132]^;INFO^;150^;data_transformation.py^;initiate_data_transformation()^;Obtaining preprocessing object.
[2022-08-10 11:36:03,134]^;INFO^;134^;data_transformation.py^;get_data_transformer_object()^;Categorical columns: ['ocean_proximity']
[2022-08-10 11:36:03,134]^;INFO^;135^;data_transformation.py^;get_data_transformer_object()^;Numerical columns: ['longitude', 'latitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income']
[2022-08-10 11:36:03,134]^;INFO^;154^;data_transformation.py^;initiate_data_transformation()^;Obtaining training and test file path.
[2022-08-10 11:36:03,134]^;INFO^;161^;data_transformation.py^;initiate_data_transformation()^;Loading training and test data as pandas dataframe.
[2022-08-10 11:36:03,154]^;INFO^;171^;data_transformation.py^;initiate_data_transformation()^;Splitting input and target feature from training and testing dataframe.
[2022-08-10 11:36:03,155]^;INFO^;179^;data_transformation.py^;initiate_data_transformation()^;Applying preprocessing object on training dataframe and testing dataframe
[2022-08-10 11:36:03,190]^;INFO^;197^;data_transformation.py^;initiate_data_transformation()^;Saving transformed training and testing array.
[2022-08-10 11:36:03,193]^;INFO^;204^;data_transformation.py^;initiate_data_transformation()^;Saving preprocessing object.
[2022-08-10 11:36:03,195]^;INFO^;214^;data_transformation.py^;initiate_data_transformation()^;Data transformationa artifact: DataTransformationArtifact(is_transformed=True, message='Data transformation successfull.', transformed_train_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_transformation/2022-08-10-11-36-01/transformed_data/train/housing.npz', transformed_test_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_transformation/2022-08-10-11-36-01/transformed_data/test/housing.npz', preprocessed_object_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/data_transformation/2022-08-10-11-36-01/preprocessed/preprocessed.pkl')
[2022-08-10 11:36:03,195]^;INFO^;220^;data_transformation.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-08-10 11:36:03,195]^;INFO^;180^;configuration.py^;get_model_trainer_config()^;Model trainer config: ModelTrainerConfig(trained_model_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/model_trainer/2022-08-10-11-36-01/trained_model/model.pkl', base_accuracy=0.6, model_config_file_path='config/model.yaml')
[2022-08-10 11:36:03,195]^;INFO^;46^;model_trainer.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-08-10 11:36:03,195]^;INFO^;54^;model_trainer.py^;initiate_model_trainer()^;Loading transformed training dataset
[2022-08-10 11:36:03,196]^;INFO^;58^;model_trainer.py^;initiate_model_trainer()^;Loading transformed testing dataset
[2022-08-10 11:36:03,196]^;INFO^;62^;model_trainer.py^;initiate_model_trainer()^;Splitting training and testing input and target feature
[2022-08-10 11:36:03,196]^;INFO^;66^;model_trainer.py^;initiate_model_trainer()^;Extracting model config file path
[2022-08-10 11:36:03,196]^;INFO^;69^;model_trainer.py^;initiate_model_trainer()^;Initializing model factory class using above model config file: config/model.yaml
[2022-08-10 11:36:03,197]^;INFO^;74^;model_trainer.py^;initiate_model_trainer()^;Expected accuracy: 0.6
[2022-08-10 11:36:03,198]^;INFO^;76^;model_trainer.py^;initiate_model_trainer()^;Initiating operation model selecttion
[2022-08-10 11:36:03,198]^;INFO^;361^;model_factory.py^;get_best_model()^;Started Initializing model from config file
[2022-08-10 11:36:03,198]^;INFO^;206^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.linear_model' from '/home/yogesh/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/__init__.py'> import LinearRegression
[2022-08-10 11:36:03,198]^;INFO^;185^;model_factory.py^;update_property_of_class()^;Executing:$ LinearRegression().fit_intercept=True
[2022-08-10 11:36:03,215]^;INFO^;206^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.ensemble' from '/home/yogesh/anaconda3/lib/python3.9/site-packages/sklearn/ensemble/__init__.py'> import RandomForestRegressor
[2022-08-10 11:36:03,215]^;INFO^;185^;model_factory.py^;update_property_of_class()^;Executing:$ RandomForestRegressor().min_samples_leaf=3
[2022-08-10 11:36:03,216]^;INFO^;363^;model_factory.py^;get_best_model()^;Initialized model: [InitializedModelDetail(model_serial_number='module_0', model=LinearRegression(), param_grid_search={'fit_intercept': [True, False]}, model_name='sklearn.linear_model.LinearRegression'), InitializedModelDetail(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), param_grid_search={'min_samples_leaf': [6]}, model_name='sklearn.ensemble.RandomForestRegressor')]
[2022-08-10 11:36:03,216]^;INFO^;206^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from '/home/yogesh/anaconda3/lib/python3.9/site-packages/sklearn/model_selection/__init__.py'> import GridSearchCV
[2022-08-10 11:36:03,216]^;INFO^;185^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).cv=5
[2022-08-10 11:36:03,216]^;INFO^;185^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).verbose=2
[2022-08-10 11:36:03,216]^;INFO^;239^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training LinearRegression Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:03,350]^;INFO^;206^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from '/home/yogesh/anaconda3/lib/python3.9/site-packages/sklearn/model_selection/__init__.py'> import GridSearchCV
[2022-08-10 11:36:03,351]^;INFO^;185^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).cv=5
[2022-08-10 11:36:03,352]^;INFO^;185^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).verbose=2
[2022-08-10 11:36:03,352]^;INFO^;239^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:39,162]^;INFO^;348^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Acceptable model found:GridSearchedBestModel(model_serial_number='module_0', model=LinearRegression(), best_model=LinearRegression(), best_parameters={'fit_intercept': True}, best_score=0.6427424742830297)
[2022-08-10 11:36:39,162]^;INFO^;348^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Acceptable model found:GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8054586878073107)
[2022-08-10 11:36:39,163]^;INFO^;354^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Best model: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8054586878073107)
[2022-08-10 11:36:39,163]^;INFO^;79^;model_trainer.py^;initiate_model_trainer()^;Best model found on training dataset: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8054586878073107)
[2022-08-10 11:36:39,163]^;INFO^;81^;model_trainer.py^;initiate_model_trainer()^;Extracting trained model list.
[2022-08-10 11:36:39,163]^;INFO^;85^;model_trainer.py^;initiate_model_trainer()^;Evaluation all trained model on training and testing dataset both
[2022-08-10 11:36:39,163]^;INFO^;74^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [LinearRegression] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:39,164]^;INFO^;93^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:39,164]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2022-08-10 11:36:39,164]^;INFO^;95^;model_factory.py^;evaluate_regression_model()^;0.6481624838735276		 0.6564351734035228		0.6522725993287921
[2022-08-10 11:36:39,164]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:39,164]^;INFO^;98^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [0.008272689529995159].
[2022-08-10 11:36:39,165]^;INFO^;99^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [68628.19823817495].
[2022-08-10 11:36:39,165]^;INFO^;100^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [66911.98668029795].
[2022-08-10 11:36:39,165]^;INFO^;116^;model_factory.py^;evaluate_regression_model()^;Acceptable model found MetricInfoArtifact(model_name='LinearRegression()', model_object=LinearRegression(), train_rmse=68628.19823817495, test_rmse=66911.98668029795, train_accuracy=0.6481624838735276, test_accuracy=0.6564351734035228, model_accuracy=0.6522725993287921, index_number=0). 
[2022-08-10 11:36:39,165]^;INFO^;74^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [RandomForestRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:39,361]^;INFO^;93^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:39,361]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2022-08-10 11:36:39,361]^;INFO^;95^;model_factory.py^;evaluate_regression_model()^;0.9040604976987286		 0.81994306154592		0.8599496541997927
[2022-08-10 11:36:39,361]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-08-10 11:36:39,361]^;INFO^;98^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [0.08411743615280864].
[2022-08-10 11:36:39,361]^;INFO^;99^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [35836.88513301558].
[2022-08-10 11:36:39,361]^;INFO^;100^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [48440.04163514795].
[2022-08-10 11:36:39,361]^;INFO^;88^;model_trainer.py^;initiate_model_trainer()^;Best found model on both training and testing dataset.
[2022-08-10 11:36:39,361]^;INFO^;96^;model_trainer.py^;initiate_model_trainer()^;Saving model at path: /home/yogesh/self-learning/project/machine_learning_project/housing/artifact/model_trainer/2022-08-10-11-36-01/trained_model/model.pkl
[2022-08-10 11:36:39,363]^;INFO^;110^;model_trainer.py^;initiate_model_trainer()^;Model Trainer Artifact: ModelTrainerArtifact(is_trained=True, message='Model Trained successfully', trained_model_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/model_trainer/2022-08-10-11-36-01/trained_model/model.pkl', train_rmse=68628.19823817495, test_rmse=66911.98668029795, train_accuracy=0.6481624838735276, test_accuracy=0.6564351734035228, model_accuracy=0.6522725993287921)
[2022-08-10 11:36:39,363]^;INFO^;116^;model_trainer.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-08-10 11:36:39,363]^;INFO^;197^;configuration.py^;get_model_evaluation_config()^;Model Evaluation Config: ModelEvaluationConfig(model_evaluation_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/model_evaluation/model_evaluation.yaml', time_stamp='2022-08-10-11-36-01').
[2022-08-10 11:36:39,363]^;INFO^;24^;model_evaluation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Evaluation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-08-10 11:36:39,382]^;INFO^;106^;model_evaluation.py^;initiate_model_evaluation()^;Converting target column into numpy array.
[2022-08-10 11:36:39,382]^;INFO^;109^;model_evaluation.py^;initiate_model_evaluation()^;Conversion completed target column into numpy array.
[2022-08-10 11:36:39,382]^;INFO^;112^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target column from the dataframe.
[2022-08-10 11:36:39,383]^;INFO^;115^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target column from the dataframe completed.
[2022-08-10 11:36:39,383]^;INFO^;120^;model_evaluation.py^;initiate_model_evaluation()^;Not found any existing model. Hence accepting trained model
[2022-08-10 11:36:39,383]^;INFO^;64^;model_evaluation.py^;update_evaluation_report()^;Previous eval result: {}
[2022-08-10 11:36:39,383]^;INFO^;80^;model_evaluation.py^;update_evaluation_report()^;Updated eval result:{'best_model': {'model_path': '/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/model_trainer/2022-08-10-11-36-01/trained_model/model.pkl'}}
[2022-08-10 11:36:39,384]^;INFO^;124^;model_evaluation.py^;initiate_model_evaluation()^;Model accepted. Model eval artifact ModelEvaluationArtifact(is_model_accepted=True, evaluated_model_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/model_trainer/2022-08-10-11-36-01/trained_model/model.pkl') created
[2022-08-10 11:36:39,384]^;INFO^;160^;model_evaluation.py^;__del__()^;====================Model Evaluation log completed.==================== 
[2022-08-10 11:36:39,384]^;INFO^;211^;configuration.py^;get_model_pusher_config()^;Model pusher config ModelPusherConfig(export_dir_path='/home/yogesh/self-learning/project/machine_learning_project/saved_models/20220810113639')
[2022-08-10 11:36:39,384]^;INFO^;15^;model_pusher.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Pusher log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-08-10 11:36:39,384]^;INFO^;28^;model_pusher.py^;export_model()^;Exporting model file: [/home/yogesh/self-learning/project/machine_learning_project/saved_models/20220810113639/model.pkl]
[2022-08-10 11:36:39,384]^;INFO^;33^;model_pusher.py^;export_model()^;Trained model: /home/yogesh/self-learning/project/machine_learning_project/housing/artifact/model_trainer/2022-08-10-11-36-01/trained_model/model.pkl is copied in export dir:[/home/yogesh/self-learning/project/machine_learning_project/saved_models/20220810113639/model.pkl]
[2022-08-10 11:36:39,384]^;INFO^;39^;model_pusher.py^;export_model()^;Model pusher artifact: [ModelPusherArtifact(is_model_pusher=True, export_model_file_path='/home/yogesh/self-learning/project/machine_learning_project/saved_models/20220810113639/model.pkl')]
[2022-08-10 11:36:39,384]^;INFO^;51^;model_pusher.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Pusher log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-08-10 11:36:39,384]^;INFO^;150^;pipeline.py^;run_pipeline()^;Model pusher artifact: ModelPusherArtifact(is_model_pusher=True, export_model_file_path='/home/yogesh/self-learning/project/machine_learning_project/saved_models/20220810113639/model.pkl')
[2022-08-10 11:36:39,384]^;INFO^;153^;pipeline.py^;run_pipeline()^;Pipeline completed.
[2022-08-10 11:36:39,384]^;INFO^;168^;pipeline.py^;run_pipeline()^;Pipeline experiment: Experiment(experiment_id='3a396384-73c5-40d5-b252-f4b4b71dd7b8', initialization_timestamp='2022-08-10-11-36-01', artifact_time_stamp='2022-08-10-11-36-01', running_status=False, start_time=datetime.datetime(2022, 8, 10, 11, 36, 2, 558596), stop_time=datetime.datetime(2022, 8, 10, 11, 36, 39, 384519), execution_time=datetime.timedelta(seconds=36, microseconds=825923), message='Pipeline has been completed.', experiment_file_path='/home/yogesh/self-learning/project/machine_learning_project/housing/artifact/experiment/experiment.csv', accuracy=0.6522725993287921, is_model_accepted=True)
